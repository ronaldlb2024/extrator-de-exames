(function(){
  // ===== EXTRACTOR – Caixa de Texto (VERSÃO ESTENDIDA v2) =====
  // Ajustado para: Leuco sempre como 2º item, DASA (linha com % e valor absoluto), mais marcadores.

  const OLD=document.getElementById('lab-panel-textbox');if(OLD)OLD.remove();
  const wrap=document.createElement('div');
  wrap.id='lab-panel-textbox';
  wrap.style.cssText='position:fixed;right:12px;bottom:12px;z-index:2147483647;background:#0b1220;color:#e7eefc;border:1px solid #1f2b48;border-radius:12px;box-shadow:0 8px 24px rgba(0,0,0,.35);max-width:720px;width:720px;font:14px/1.45 system-ui,Segoe UI,Roboto,Helvetica,Arial;padding:12px';
  wrap.innerHTML=`<div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:8px"><strong>Extrator de Exames – Caixa de Texto (Estendido v2)</strong><div><button id="lab-close">Fechar</button></div></div>
  <div style="display:grid;grid-template-columns:1fr;gap:8px">
  <label>Cole laudo:</label>
  <textarea id="in" style="width:100%;height:180px"></textarea>
  <div><button id="btn-extract">Extrair</button></div>
  <label>Saída:</label>
  <textarea id="out" style="width:100%;height:120px"></textarea>
  <div><input id="paciente" placeholder="Paciente"/><button id="btn-add">Adicionar</button><button id="btn-copy">Copiar</button></div>
  <label>Compilado:</label>
  <textarea id="compiled" style="width:100%;height:140px" readonly></textarea>
  <div><button id="btn-export">Exportar</button><button id="btn-clear">Limpar</button><span id="counter"></span></div>
  </div>`;
  document.body.appendChild(wrap);
  wrap.querySelector('#lab-close').onclick=()=>wrap.remove();

  const KEY='LAB_COMPILADO_CXT_V2B';
  const load=()=>{try{return JSON.parse(localStorage.getItem(KEY)||'[]')}catch(e){return[]}};
  const save=a=>localStorage.setItem(KEY,JSON.stringify(a));
  const refresh=()=>{const arr=load().sort((a,b)=>a.slot-b.slot);wrap.querySelector('#compiled').value=arr.map(e=>`Leito ${e.slot}${e.nome? ' - '+e.nome:''}: ${e.line}`).join('\n');wrap.querySelector('#counter').textContent=`Itens: ${arr.length}`;};

  const norm=t=>t.replace(/\r/g,'').replace(/\u00A0/g,' ').replace(/[ ]{2,}/g,' ');
  const toNum=s=>{if(!s)return'';const v=parseFloat(String(s).replace(/\./g,'').replace(',','.'));return isNaN(v)?'':+v;};

  function extractLine(raw){
    if(!raw) return '';
    const T=norm(raw);
    const evol=/LAUDO\s+EVOLUTIVO/i.test(T)||/(\d{2}\/\d{2}\/\d{4}).*(\d{2}:\d{2})/s.test(T);

    function findVal(re){const m=T.match(new RegExp(re.source+"[^0-9]*([0-9][\
